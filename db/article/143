{"name": "Better Coding", "id": 143, "content": "<style type=\"text/css\">img { width: 100%; } .flex-card-list { list-style-type: none; margin: 0; padding: 0; display: flex; flex-flow: row wrap; justify-content: flex-start; } .flex-card-listitem { padding: 10px; display: flex; flex-flow: column nowrap; flex: 1 1 25%; min-width: 19rem; max-width: 33.3333%; } .flex-card { padding: 20px; background: #fff; display: flex; flex-flow: column nowrap; flex: 1 0 auto; border-radius: 5px; } .flex-card-image img { border-radius: 5px; } .flex-card-content { padding-top: 30px; display: flex; flex-direction: column; flex: 1 0 auto; } .flex-card-content p { flex: 1 0 auto; } .flex-card-button { text-decoration: none; color: #fff; background: #4DA54E; padding: 10px; text-align: center; display: block; margin-top: 20px; width: 90%; align-self: center; border-radius: 5px; } .flex-card-button:hover { background: #3d833e; }\n</style>\n<ul class=\"flex-card-list\">\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/260\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"https://images.theconversation.com/files/404204/original/file-20210603-23-1945cow.jpg?ixlib=rb-1.1.0&amp;q=45&amp;auto=format&amp;w=300&amp;h=300&amp;fit=crop\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Coding Guidelines</h2>\n\n\t<p>It&#39;s easy to forget things while coding, so make sure that you internalise these proven guidelines &amp; make them a habit.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/126\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/sonardashboard.png\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Check After You Code</h2>\n\n\t<p>Check your code by peer review, using SONAR, and other tools integrated with your IDE for Readability, Maintainability, Security loopholes etc.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/96\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/unit_test.jpg\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Better Unit Tests</h2>\n\n\t<p>Unit tests make sure that your system is robust and will be able to handle negative&nbsp;unexpected scenarios.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/68\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/lamda.jpg\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Functional-Style Coding</h2>\n\n\t<p>Thinking and coding your system in a functional way reduces the chances of errors and bugs because of statelessness.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/148\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/library.jpg\" style=\"height: 250px;\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Libraries For Better Coding</h2>\n\n\t<p>There are already lots of libraries which can help you write better code. Before writing any piece of code find whether some stable library already provides you the functionality that you wish to develop.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/155\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/reactive.jpg\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Reactive Programming</h2>\n\n\t<p>Reactive Programming gives a more stable way of handling state in applications.&nbsp;</p>\n\t</div>\n\t</div>\n\t</li>\n</ul>\n", "authorId": 1, "subject": "programming", "tags": ["prity=4"], "img": "/images/better.jpg", "summary": "There is always some scope of improvement in coding. There have been different paradigms of programming like object oriented programming, functional programming, reactive programming and they serve different purposes. There are design patterns and design principles that help you write better code. A better code will be easier to test, easier to modify to fit new requirements, easier to deliver and more performant.", "lastUpdated": "2021-06-20 22:20:14.466719"}