{"name": "Edit Distance Problem", "id": 121, "content": "<p><strong>Problem Statement:</strong></p>\n\n<p>You are given two strings A, and B. You are allowed to perform three types of operations on string A. You can either delete a character from A, or you can insert a character into A, or substitute a character in A with some other character.</p>\n\n<p>You want to find out how many minimum operations are required to convert string A into B?</p>\n\n<hr />\n<p>&nbsp;</p>\n\n<p>First applying the framework of problem-solving that I have mentioned <a href=\"http://satyendra.online/#/article/117\" target=\"_blank\">here</a>.</p>\n\n<p><em>Deducing from What We Have:</em></p>\n\n<p>&nbsp; &nbsp; Fill In The Blanks:</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E.g. the problem doesn&#39;t talk about length, index, order&nbsp;of characters, but they&#39;re implcitily there.</p>\n\n<p><em>Examples:</em></p>\n\n<p>&nbsp; &nbsp;Unique:</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A = CAT, B = DOG</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A = CAT, B = CUT</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A = SUNDAY, B = SATURDAY (S is common prefix, DAY is common suffix to both of them, so maybe we don&#39;t even need to worry about these i.e we could reduce it to A = UN, B = ATUR)</p>\n\n<p><br />\n&nbsp;&nbsp; &nbsp;Extreme:</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A =&nbsp; ,&nbsp; B = XYZ. (Here A is empty)</p>\n\n<p>&nbsp; &nbsp; Symmetric:</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; A = XYZ, B =&nbsp; &nbsp; (Here B is empty)</p>\n\n<p>&nbsp;</p>\n\n<p><em>(Re)Building The Situation:</em></p>\n\n<p>&nbsp; &nbsp; How did this problem evolve?</p>\n\n<p>&nbsp; &nbsp; E.g. start from empty string for this problem:</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If I have A = , and want to transform into B = X, I can simply insert X into A.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If I have A = X, and B = X, I don&#39;t need to do anything.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If I have A = X and B = XY, I can simply insert Y into A.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; If I have A = Y and B = X, I can simply substitute Y with X.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; But, what if B = XY into previous case?</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; It would be silly to first substitute (like we did in previous case) and then insert Y into A.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Instead, we could just insert X into A.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;In this way, we could build up the problem situation.</p>\n\n<p><br />\n&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp; &nbsp;Instead of starting from ground up, you could also (re)build by referring to what is the most recent state that may have led to the current situation.</p>\n\n<p>&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; E.g. we could ask, &quot;If I have A, and B; the this B would have come from something (let&#39;s say A&#39;) either by insertion, deletion, or substitution&quot;. Then we could do the same thing with A&#39;, and so on. We just have to select the one of three options, the one which gives minimum distance.</p>\n\n<p><br />\n<em>Reduce:</em></p>\n\n<p>&nbsp; &nbsp; This and previous are highly linked.</p>\n\n<p>&nbsp; &nbsp; E.g. you can reduce on the size of the arguments<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- size of first string<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- size of second string<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- number of operations (what if only one operation was allowed, e.g. only INSERT was allowed?)</p>\n\n<p><br />\n&nbsp;</p>\n\n<hr />\n<p>&nbsp;</p>\n\n<p>Let&#39;s lay out couple of conjectures (<em>resulting&nbsp;from the above exercise</em>) and then see if they hold true:</p>\n\n<p>1. If there&#39;s common prefix and suffix to both the strings we can simply remove them.</p>\n\n<p>&nbsp; &nbsp; &nbsp;<em>Is there any situation where we remove them, but should not have removed them?</em></p>\n\n<p>&nbsp; &nbsp; &nbsp;Or, in other words, could the remove part(s) contribute towards minising the overall distance?</p>\n\n<p>&nbsp; &nbsp; &nbsp;It&#39;s hard to figure out a procedure for proving this. But the examples show that this assumption holds true.</p>\n\n<p>2. If I have found the minimum for A, B, I can easily figure out the minimum if either A, or B, or both&nbsp;are extended by one more character.</p>\n\n<p>&nbsp; &nbsp;&nbsp;</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n", "authorId": 1, "subject": "algos", "tags": [], "img": "", "summary": "", "lastUpdated": "2021-04-10 11:45:50.057236"}