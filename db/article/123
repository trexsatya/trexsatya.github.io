{"name":"Knapsack Problem","id":123,"content":"<div>Problem Statement of 0-1 Knapsack Problem</div>\n\n<div><strong>In words:</strong> You are given items which have values and weights associated. You have to select items which give you maximum value but their combined weight is not greater than W<br />\n<strong>In Mathematical form:</strong></div>\n\n<div class=\"math\">\\text{Maximize } \\sum_{i=1}^n v_i x_i \\space\\space\\text{ Subject to }\\sum_{i=1}^n w_i x_i &lt;= W \\space\\text{ and } x_i \\in \\{0,1\\}</div>\n\n<div>The solution as described in above demonstration is</div>\n\n<div class=\"math\">K[i][w] = max_{i=1}^n(K[i-1][w], \\text{value}[i]+ K[i-1][w- \\text{weight}(i)]) \\text{ where } K[x][y] = -\\infty \\text{ if } y &lt;= 0</div>\n\n<div>Negative Infinity here just means that, ignore this state because it makes weight limit exceed and just copy the value from previous state.</div>\n\n<div>There is another variation variation of problem in which <span class=\"math\"> x_i &gt;= 0 </span> This variance is called Unbounded Knapsack problem<br />\nAnd solution to this variation is\n<div class=\"math\">K[w] = max_{i=1}^n( \\text{value}[i] + K[w - \\text{weight}(i)]) \\text{ where } K[x] = -\\infty \\text{ if } x &lt;= 0</div>\n</div>\n","authorId":null,"subject":"algos","tags":null,"img":null,"summary":null,"lastUpdated":null}