{"name":"Shortest Path Algorithms - You want to travel as less as possible","id":91,"content":"<p>Suppose you live at some place called &quot;A&quot;, and you want to visit &quot;Z&quot;. Now there are many other places in between &quot;A&quot; and &quot;Z&quot;, which are inter-connected. So you have to decide which places to go through.</p>\n\n<p>You want to travel as less as possible, might be to save fuel, or you just don&#39;t want to waste time.&nbsp;</p>\n\n<pre>\n<code class=\"language-java\">\nfindShortestDistanceBetween(A,Z){\n   x = findNearestFrom(allUnvisitedPlaces);\n   //Now because I am going through x, update the distances to all the neighboring places\n   x.neighbors().forEach( neighbor -&gt; updateDistanceOf(neighbor).onlyIf(xReducesTheDistanceTo(neighbor)))\n   //Do this until there is no more unvisited place.\n}</code></pre>\n\n<p>&nbsp;</p>\n","authorId":null,"subject":"algo","tags":null,"img":null,"summary":null,"lastUpdated":null}