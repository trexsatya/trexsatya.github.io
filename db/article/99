{"name": "AWS Essentials", "id": 99, "content": "<p>Public-facing endpoints</p>\n\n<p>CDN: CDN stands for Content Delivery Network, they are primarily designed to cache assets all over the world so that when a browser requests the asset, a cached copy will be geographically close to that browser. If you are serving assets directly from your Rails server in production, the best practice is to use a CDN in front of your application.<br />\n&nbsp;&nbsp; &nbsp;Why use CDN? Does it make sense to use it for serving dynamic APIs?<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;To gain TLS/SSL termination as close to the user as possible<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;To improve security by letting the CDN handle DDOS. Elimination of all protocol attacks that aren&#39;t HTTP (significantly reducing DDOS risk)<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;To let the CDN cache data close to the user (However this isn&#39;t required for dynamic REST endpoints )<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Edge routing (allowing you to hide multiple services in multiple locations behind a single domain name)<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;To enable us to add a Web Application Firewall in front of our services</p>\n\n<p>https://guides.rubyonrails.org/asset_pipeline.html<br />\n&nbsp;&nbsp; &nbsp;Basically we need a strategy to invalidate cache when the content of the file changes.</p>\n\n<p>Modify your service to reject requests that don&#39;t &quot;come from CloudFront.&quot; Currently the best way to do this is to require that all requests to your service have the X-Custom-Auth header set to a &quot;secret&quot; value. So - choose a secret value and modify your service to return a 401 unless the request has a matching header/value combo. When we then create the CloudFront distribution, we will configure it to send this header/value with every request. (If you already have users then you&#39;ll need to do this as a multi-step process.)</p>\n\n<p>Make sure your service is configured to accept traffic from 0.0.0.0/0 since requests from CloudFront will come from many public IP addresses.</p>\n\n<p>S3 Bucket to store logs from CloudFront.</p>\n\n<p>DNS: The Domain Name System (DNS) is a hierarchical decentralized naming system for computers, services, or any resource connected to the Internet or a private network. It associates various information with domain names assigned to each of the participating entities. The external DNS service, used to provide DNS functionality on the Internet, i.e. provide authoritative name servers for our public domains and records External DNS: The records served in our external zones provide name to IP and IP to name lookup functionality for all Internet users, used to connect to our services</p>\n\n<p>$2M+ per month on AWS.</p>\n\n<p>AWS:<br />\n1. Access to AWS Resources:&nbsp;<br />\n&nbsp;&nbsp; &nbsp;What are AWS resources? - Everything that AWS provides: instances, cloudfront distributions, RDS, Firewall etc.</p>\n\n<p>IAM:<br />\n&nbsp;&nbsp; &nbsp;Create users, groups, user permissions<br />\n&nbsp;&nbsp; &nbsp;Federated users (users outside AWS) =&gt; Authenticate with LDAP, Google/FB etc and assume IAM roles<br />\n&nbsp;&nbsp; &nbsp;IAM Policy document lists permissions for users/roles<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- Who/what is authorized; Can be user/group/role/statements<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- To allow or not<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- Which actions are we talking about<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- Any conditions<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;- Which resources are we talking about<br />\n&nbsp;&nbsp; &nbsp;Assuming an IAM Role is like temporarily wearing a hat that allows some actions</p>\n\n<p>&nbsp;&nbsp; &nbsp;Permission Boundaries:</p>\n\n<p>&nbsp;&nbsp; &nbsp;To use a statement, we need a policy<br />\nA tool to manage IAM things:&nbsp;<br />\n&nbsp;</p>\n", "authorId": 1, "subject": "architecture", "tags": [], "img": "", "summary": "", "lastUpdated": "2024-02-20 11:42:16.407017"}