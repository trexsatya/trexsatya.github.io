{"name": "Concurrency", "id": 138, "content": "<style type=\"text/css\">img {\n      width: 100%;\n    }\n\n    .flex-card-list {\n      list-style-type: none;\n      margin: 0;\n      padding: 0;\n      display: flex;\n      flex-flow: row wrap;\n      justify-content: flex-start;\n    }\n\n    .flex-card-listitem {\n      padding: 10px;\n      display: flex;\n      flex-flow: column nowrap;\n      flex: 1 1 25%;\n     min-width: 300px;\n      max-width: 33.3333%;\n    }\n\n    .flex-card {\n      padding: 20px;\n      background: #fff;\n      display: flex;\n      flex-flow: column nowrap;\n      flex: 1 0 auto;\n      border-radius: 5px;\n    }\n\n    .flex-card-image img {\n      border-radius: 5px;\n    }\n\n    .flex-card-content {\n      padding-top: 30px;\n      display: flex;\n      flex-direction: column;\n      flex: 1 0 auto;\n    }\n\n    .flex-card-content p {\n      flex: 1 0 auto;\n    }\n\n    .flex-card-button {\n      text-decoration: none;\n      color: #fff;\n      background: #4DA54E;\n      padding: 10px;\n      text-align: center;\n      display: block;\n      margin-top: 20px;\n      width: 90%;\n      align-self: center;\n      border-radius: 5px;\n    }\n\n    .flex-card-button:hover {\n      background: #3d833e;\n    }\n</style>\n<ul class=\"flex-card-list\">\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/82\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/java-concurrency.png\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Concurrency And Multi-threading</h2>\n\n\t<p>See what is Multithreading, how you can create a multithreaded application in Java. Some typical scenarios where multithreading is needed.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/152\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/deadlock.jpg\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Thread Safety In Java</h2>\n\n\t<p>Multithreading needs very careful handling of situations which may arise due to different threads running simultaneously but not coordinating with each other properly.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/153\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/bulb.jpg\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Multi-threading Utilities</h2>\n\n\t<p>It&#39;s not wise to write every thing from scratch while dealing with multithreading because it&#39;s error prone, hence better use some utilities provided by Java library.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/25\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/pool.jpg\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Thread Pools</h2>\n\n\t<p>A lot of threads can exhaust your system&#39;s resources (memory, CPU etc). So it&#39;s better to reuse threads when we can using a thread pool.</p>\n\t</div>\n\t</div>\n\t</li>\n\t<li class=\"flex-card-listitem\" reactlink=\"/article/109\">\n\t<div class=\"flex-card\">\n\t<div class=\"flex-card-image\"><img src=\"/images/java.jpg\" /></div>\n\n\t<div class=\"flex-card-content\">\n\t<h2 class=\"flex-card-heading\">Better Concurrency And Asynchronisity</h2>\n\n\t<p>Efficient libraries have been developed to achieve concurrency different from traditional multithreaded models.</p>\n\t</div>\n\t</div>\n\t</li>\n</ul>\n", "authorId": 1, "subject": "programming", "tags": ["prity=2"], "img": "/images/multithreading.jpg", "summary": "With the arrival of multi-core CPUs, and the ability to interconnect machines in real time, it is now very essential to write efficient concurrent systems, concurrent algorithms. Multi-threading is basically a way of squeezing every ounce of work from machine.", "lastUpdated": "2021-02-06 09:50:27.182780"}