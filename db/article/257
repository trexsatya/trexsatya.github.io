{"name": "Evolution Of Application/Systems", "id": 257, "content": "<p>You create an <em>application/system</em> to support a business. <em>Business</em> means that your are providing some <em>service</em> to people(<em>users</em>).&nbsp;</p>\n\n<p>What your application/system&nbsp;does largely depends upon what kind of business it is supporting. But in general, it will provide assistance to the users of the system, make things easier for them, make things automatic for them.</p>\n\n<p>How the system does this thing again depends upon what kind of business it is, but in general your system will provide an interface to your users (e.g. a web app, a mobile app, SMS facility, voice call facility, a desktop app, or even a hardware device, etc), your users will interact with this interface and the interface will make some requests to your system, your system will do some things like parse and understand the request, store some data, fetch some data, do some calculations, and then give response back the requester interface.</p>\n\n<p>So, in summary, and from a higher perspective, your system just accepts some requests, stores data, and makes some computations, and serves data.</p>\n\n<p>Simple Case:</p>\n\n<h3>A single application server + A single DB instance</h3>\n\n<p>How much throughput with a reasonable response time can this setup give?&nbsp;</p>\n\n<p>There&#39;s no accurate answer, because it depends upon the webserver implementation, web-server configuration, hardware of the server, how much resources your application/DB gets from the hardware (because there&#39;d always be other processes running on the machine, also if you are using VMs from cloud service providers it will be shared with other users).</p>\n\n<p>&nbsp;</p>\n\n<p>&nbsp;</p>\n", "authorId": 1, "subject": "architecture", "tags": [], "img": "", "summary": "string", "lastUpdated": "2021-01-26 07:02:13.023969"}