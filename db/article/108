{"name":"Hystrix - A Circuit-Breaker And More","id":108,"content":"<p>&nbsp;Circuit-Breaker is a Design-Pattern. The idea is to detect latency, and failure as soon as possible and act wisely <em>(because if you know that you are going to fail, you better&nbsp;not try or try something different)</em>. This is useful in case of micro-services, when one microservice call another. And when a lot of services are involved, a failure/slowness of one system can affect many other services which are dependent on it. And the slowness spreads like an epidemic.</p>\n\n<p>Circuit-Breaker is used to check the availability of an external service (a DB server or a web service).</p>\n\n<p>Before external service is contacted, check whether it is available or not. (The availability is recorded in intervals)</p>\n\n<p><strong>Circuit-Breaker pattern is just one of many things that should be used to make RESTful microservices stable.</strong></p>\n\n<div style=\"border:1px solid #cccccc;padding:5px 10px;\"><span style=\"font-size:16px;\">How Hystrix implements Circuit-Breaker pattern </span><span style=\"font-size:12px;\">(<i>Hystrix is a Circuit-Breaker + more)</i></span></div>\n\n<p><br />\ncreate HystrixCommand&lt;T&gt; overriding its run() method.</p>\n\n<p>After creation, its your choice how to use that command. Synchronously, Asynchronously, or in Reactive style. Neverthless, the command will execute in a separate thread.</p>\n\n<p>All exceptions except <b>HystrixBadRequestException</b>&nbsp;are considered failure by Hystrix, so it will trigger circuit-breaker logic and fallback logic. HystrixCommand has getFallback() which you can override.</p>\n\n<p>There are basically&nbsp;<strong>four reasons for Hystrix to call the fallback method</strong>: an exception, a timeout, too many parallel requests, or too many exceptions in the previous calls.</p>\n\n<p>In the fallbak method retry if there was a timeout, but it does not make sense to retry if the scenario was of too many parallel requests or too many exceptions.</p>\n\n<p>Hystrix provides a medium for DevOps monitoring. &nbsp;Metrics-Publisher, JMX, or you can write your own adapter.</p>\n\n<h2><strong><span style=\"font-family:Georgia,serif;\">Hystrix Example with plain Java</span></strong></h2>\n\n<p>&nbsp;</p>\n","authorId":null,"subject":"linked-to-137","tags":null,"img":null,"summary":null,"lastUpdated":"2018-07-01T13:59:24.472+0000"}