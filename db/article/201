{"name":"Linux User Administration","id":201,"content":"<p><u>Where am I starting from?</u></p>\n\n<p>&nbsp; &nbsp; &nbsp;&nbsp;&nbsp;I have a Virtual Machine in cloud. By default logged in as root.</p>\n\n<p><u>What do I want to do?</u></p>\n\n<p>&nbsp; &nbsp; &nbsp; I want to create a user, which represents a person Satyendra Kumar. Satyendra Kumar will be represented by username=satyendra</p>\n\n<pre>\n<code class=\"language-bash\">$ adduser satyendra</code></pre>\n\n<p>This simple command will do a lot of things:</p>\n\n<div style=\"background:#eeeeee;border:1px solid #cccccc;padding:5px 10px;\">A <strong>/home/<em>satyendra</em></strong> directory is created<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;.bash_logout<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;.bash_profile<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<strong>.bashrc</strong><br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;are created under that home directory<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;A mail spool is created <strong>/var/spool/mail/<em>satyendra</em></strong><br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;A new record is created in <strong>/etc/passwd</strong> file<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;[username]:[x]:[UID]:[GID]:[Comment]:[Home directory]:[Default shell]<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;x =&gt; account is protected by shadowed passwd; /etc/shadow<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;UID =&gt; User ID<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;GID =&gt; (Primary) Group ID<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;A new record (i.e. a new group with only this user as a member) is created in <strong>/etc/group</strong><br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;[Group name]:[Group password]:[GID]:[Group members]<br />\n&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;Group password = x =&gt; Group passwords are not being used</div>\n\n<p>CRUD operations on users (Create, Retrieve, Update, Delete)</p>\n\n<p>Create operation is explained above.</p>\n\n<p><u><strong>Retrieve Info about user(s) and logins:</strong></u></p>\n\n<p>To retrieve info about user you can examine the files mentioned above.</p>\n\n<p><strong>/var/log/wtmp</strong> logs the record of each login. You can examine this. However commands would be more helpful.</p>\n\n<p>So you can use these commands:</p>\n\n<pre>\n<code class=\"language-bash\">$ lslogins --help\nExamine the wtmp and btmp logs, /etc/shadow (if necessary) and /etc/passwd and output the desired data. The default action is to list info about all the users in the system.\nOutput:\nUID USER  PROC PWD-LOCK PWD-DENY LAST-LOGIN GECOS\n</code></pre>\n\n<p><u><strong>Want to see who is logged in and what they are doing?</strong></u></p>\n\n<pre>\n<code class=\"language-bash\">$ w\n 11:03:56 up 187 days, 16:23,  2 users,  load average: 0.00, 0.00, 0.00\nUSER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT\nroot     tty1     -                20Mar18 63days  0.67s  0.61s -bash\nroot     pts/0    157.36.238.41    10:50    4.00s  0.11s  0.00s w\n</code></pre>\n\n<p>Explaination of output:</p>\n\n<p>The header shows, in this order, the current time, how long&nbsp;the system has been running, how many users are currently logged on, and the system load averages for the past 1, 5, and 15 minutes. (You can use&nbsp;--no-header option)<br />\nlogin name, the tty name, the remote host (you can use --ip-addr to show ipaddress instead), login time, idle time, JCPU, PCPU, and &nbsp;the &nbsp;command line of their current process</p>\n\n<p>JCPU =&gt; time is the time used by all processes attached to the tty. &nbsp;It does not include past background jobs, but does include currently running background jobs.</p>\n\n<p>PCPU =&gt; time is the time used by the current process, named in the &quot;what&quot; field.</p>\n\n<pre>\n<code class=\"language-bash\">$ last \n$ lastb\n$ last -ap now #All users who were present at specified time\n$ lastlog </code></pre>\n\n<p>&nbsp;</p>\n\n<p><u><strong>Update/Modify User Informations</strong></u></p>\n\n<pre>\n<code class=\"language-bash\">$ usermod --expiredate 2014-10-30 satyendra\n$ usermod --append --groups root,users satyendra\n$ usermod --home /tmp satyendra</code></pre>\n\n<p>Want to lock the user?</p>\n\n<pre>\n<code class=\"language-bash\">$ usermod --lock satyendra\n$ usermod --unlock satyendra #to unlock</code></pre>\n\n<p>Want to give same kind of permissions and privileges (e.g. ability to read a particular file) to many members? Use groups</p>\n\n<pre>\n<code class=\"language-bash\">$ groupadd common_group # Add a new group\n$ chown :common_group common.txt # Change the group owner of common.txt to common_group\n$ usermod -aG common_group satyendra # Add satyendra to common_group\n$ usermod -aG common_group user2 # Add user2 to common_group\n$ usermod -aG common_group user3 # Add user3 to common_group\n</code></pre>\n\n<p><strong>Deleting a user</strong></p>\n\n<pre>\n<code class=\"language-bash\">$ userdel --remove satyendra\n$ groupdel common_group</code></pre>\n\n<p><strong>File permissioning and privileges</strong></p>\n\n<pre>\n<code class=\"language-bash\">$ chmod u=rwx,g=rx,o=r myfile #owner of the file has Read, Write, Execute permissions, members of the group defined by owners name will have Read, Execute permission, others will have only Read permission\n$ chmod g+w #Append write permission to group\n$ chmod 754 #same as above\n#-R option to perform recursively on all files in a directory</code></pre>\n\n<p>You can change the ownership of a file</p>\n\n<pre>\n<code class=\"language-bash\">$ chown user:group &lt;filename or directory&gt;\n</code></pre>\n\n<p>SETUID and SETGID bits:</p>\n\n<p>SETUID bit&nbsp;implies If you are able to run this program, you inherit all the privileges of the owner of this program</p>\n\n<pre>\n<code class=\"language-bash\">$ chmod u+s</code></pre>\n\n<p>SETGID implies &nbsp;you are to access the file with privileges of group owner of the file/directory (In case of directories it is inherited)</p>\n\n<pre>\n<code class=\"language-bash\">$ chmod g+s [filename]</code></pre>\n\n<p>In case of /tmp folder you want everyone to be able to write to this directory i.e create new files, but you don&#39;t want person A to be able to delete or rename a file created by person B. For that</p>\n\n<pre>\n<code class=\"language-bash\">$ chmod o+t /tmp</code></pre>\n\n<p>For any file under /tmp , Only the owner of the file can delete or rename it.</p>\n\n<p><u><strong>You want some users to allow running some special commands which generally only root user can run?</strong></u></p>\n\n<pre>\n<code class=\"language-bash\">$visudo #OR\n$vim /etc/sudoers </code></pre>\n\n<p>&nbsp;</p>\n","authorId":null,"subject":"security","tags":null,"img":null,"summary":null,"lastUpdated":"2018-09-15T12:28:36.561+0000"}