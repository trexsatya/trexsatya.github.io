{"name":"Neo4J - A Graph Database","id":78,"content":"<p>Download and Install Neo4J Desktop&nbsp;</p>\n\n<p>Create Graph</p>\n\n<p>Start Neo4J Browser</p>\n\n<p>Create Nodes and Relationships</p>\n\n<pre>\n<code class=\"language-sql\">CREATE (n:Person { name: 'Andy', title: 'Developer' })\n\nMATCH (a:Person),(b:Person)  -- all Person nodes\nWHERE a.name = 'A' AND b.name = 'B' --filter\nCREATE (a)-[r:RELTYPE]-&gt;(b)  -- create relationship RELTYPE\nRETURN type(r)</code></pre>\n\n<p>&nbsp;</p>\n\n<pre>\n<code class=\"language-sql\">CREATE (a)-[r:RELTYPE { name: a.name + '&lt;-&gt;' + b.name }]-&gt;(b)\n\n-- Complex Creations\n\nCREATE p =(andy { name:'Andy' })-[:WORKS_AT]-&gt;(neo)&lt;-[:WORKS_AT]-(michael { name: 'Michael' })\nRETURN p -- Create Full Path</code></pre>\n\n<p>&nbsp;</p>\n\n<pre>\n<code class=\"language-sql\">match (root:Org)-[*]-&gt;(b:Org {name: 'H'}) //All paths from to a particular org\nwhere not ()-[:CHILD]-&gt;(root)             //Find root; root is the one which is child of none\noptional match (root)-[*]-&gt;(xx {label: 'XX'})-[*0..]-&gt;(b) //optionally there might be GANTT on the path or not\nreturn root.name, xx.name</code></pre>\n\n<p>&nbsp;</p>\n","authorId":null,"subject":"programming","tags":null,"img":null,"summary":null,"lastUpdated":"2020-03-18T13:39:08.315+0000"}